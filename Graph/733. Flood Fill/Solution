class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        
        
        queue<pair<int,int>> q;
        q.push({sr,sc}); int color=image[sr][sc]; image[sr][sc]=newColor;
        int vis[image.size()][image[0].size()];
        memset(vis,-1,sizeof(vis));
        while(!q.empty())
        {
            pair<int,int> p;
            p=q.front(); q.pop();
            int x=p.first,y=p.second;
            if((x-1)>=0 && image[x-1][y]==color && vis[x-1][y]==-1) 
            {q.push({x-1,y}); image[x-1][y]=newColor; vis[x-1][y]=0;} 
            
            if((y-1)>=0 && image[x][y-1]==color && vis[x][y-1]==-1 )  
             {q.push({x,y-1}); image[x][y-1]=newColor; vis[x][y-1]=0;} 
            
            if((x+1)<image.size() && image[x+1][y]==color && vis[x+1][y]==-1 ) 
            {q.push({x+1,y}); image[x+1][y]=newColor; vis[x+1][y]=0;} 
            
            if((y+1)<image[0].size()&& image[x][y+1]==color &&vis[x][y+1]==-1) 
            {q.push({x,y+1}); image[x][y+1]=newColor;vis[x][y+1]=0; } 
            
            // cout<<x<<" "<<y<<"\n";
        }
        return image;
    }
};
